{"version":3,"sources":["../node_modules/antd/es/_util/hooks/useForceUpdate.js","../node_modules/rc-util/es/Portal.js","pages/About.js"],"names":["useForceUpdate","_React$useReducer","React","x","_slicedToArray","Portal","forwardRef","props","ref","didUpdate","getContainer","children","containerRef","useRef","useImperativeHandle","initRef","current","canUseDom","useEffect","_containerRef$current","_containerRef$current2","parentNode","removeChild","ReactDOM","createPortal","About","useState","visible","setVisible","history","useHistory","title","placement","closable","onClose","width","afterVisibleChange","goBack"],"mappings":"6GAAA,qDAEe,SAASA,IACtB,IAAIC,EAAoBC,cAAiB,SAAUC,GACjD,OAAOA,EAAI,IACV,GAIH,OAHyBC,YAAeH,EAAmB,GACtB,K,iCCPvC,oCAGII,EAAsBC,sBAAW,SAAUC,EAAOC,GACpD,IAAIC,EAAYF,EAAME,UAClBC,EAAeH,EAAMG,aACrBC,EAAWJ,EAAMI,SACjBC,EAAeC,mBAEnBC,8BAAoBN,GAAK,WACvB,MAAO,MAGT,IAAIO,EAAUF,kBAAO,GAoBrB,OAlBKE,EAAQC,SAAWC,gBACtBL,EAAaI,QAAUN,IACvBK,EAAQC,SAAU,GAIpBE,qBAAU,WACM,OAAdT,QAAoC,IAAdA,GAAgCA,EAAUF,MAElEW,qBAAU,WACR,OAAO,WACL,IAAIC,EAAuBC,EAIwB,QAAlDD,EAAwBP,EAAaI,eAA+C,IAA1BG,GAA4G,QAA/DC,EAAyBD,EAAsBE,kBAAmD,IAA3BD,GAA6CA,EAAuBE,YAAYV,EAAaI,YAE7Q,IACIJ,EAAaI,QAAuBO,IAASC,aAAab,EAAUC,EAAaI,SAAW,QAEtFX,O,mFCIAoB,UAnCD,WAAO,IAAD,EACYC,oBAAS,GADrB,mBACXC,EADW,KACFC,EADE,KAEZC,EAAUC,cAehB,OACE,eAAC,IAAD,CACEC,MAAM,WACNC,UAAU,QACVC,UAAU,EACVC,QAdY,WACdN,GAAW,IAcTD,QAASA,EACTQ,MAAM,qBACNzB,cAAc,EACd0B,mBAdkB,WACfT,GACHE,EAAQQ,UAIV,UAUE,2EACA,0DACA","file":"static/js/10.3ed082a5.chunk.js","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nexport default function useForceUpdate() {\n  var _React$useReducer = React.useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      forceUpdate = _React$useReducer2[1];\n\n  return forceUpdate;\n}","import { useRef, useEffect, forwardRef, useImperativeHandle } from 'react';\nimport ReactDOM from 'react-dom';\nimport canUseDom from './Dom/canUseDom';\nvar Portal = /*#__PURE__*/forwardRef(function (props, ref) {\n  var didUpdate = props.didUpdate,\n      getContainer = props.getContainer,\n      children = props.children;\n  var containerRef = useRef(); // Ref return nothing, only for wrapper check exist\n\n  useImperativeHandle(ref, function () {\n    return {};\n  }); // Create container in client side with sync to avoid useEffect not get ref\n\n  var initRef = useRef(false);\n\n  if (!initRef.current && canUseDom()) {\n    containerRef.current = getContainer();\n    initRef.current = true;\n  } // [Legacy] Used by `rc-trigger`\n\n\n  useEffect(function () {\n    didUpdate === null || didUpdate === void 0 ? void 0 : didUpdate(props);\n  });\n  useEffect(function () {\n    return function () {\n      var _containerRef$current, _containerRef$current2;\n\n      // [Legacy] This should not be handle by Portal but parent PortalWrapper instead.\n      // Since some component use `Portal` directly, we have to keep the logic here.\n      (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : (_containerRef$current2 = _containerRef$current.parentNode) === null || _containerRef$current2 === void 0 ? void 0 : _containerRef$current2.removeChild(containerRef.current);\n    };\n  }, []);\n  return containerRef.current ? /*#__PURE__*/ReactDOM.createPortal(children, containerRef.current) : null;\n});\nexport default Portal;","import React, { useState } from \"react\";\nimport { Drawer } from \"antd\";\nimport { useHistory } from \"react-router\";\n\nconst About = () => {\n  const [visible, setVisible] = useState(true);\n  const history = useHistory();\n\n  // const showDrawer = () => {\n  //   setVisible(true);\n  // };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  const onCloseGoBack = () => {\n    if (!visible) {\n      history.goBack();\n    }\n  };\n  return (\n    <Drawer\n      title=\"About Us\"\n      placement=\"right\"\n      closable={false}\n      onClose={onClose}\n      visible={visible}\n      width=\"calc(100% - 250px)\"\n      getContainer={false}\n      afterVisibleChange={onCloseGoBack}\n    >\n      <h1>This application is for personal use only</h1>\n      <h2>Do not use on commercial</h2>\n      <h3>Practical project</h3>\n    </Drawer>\n  );\n};\n\nexport default About;\n"],"sourceRoot":""}