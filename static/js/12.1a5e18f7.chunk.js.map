{"version":3,"sources":["pages/Register.js"],"names":["Reigster","observer","useStore","AuthStore","UserStore","history","useHistory","useState","visible","setVisible","title","placement","closable","onClose","width","getContainer","afterVisibleChange","goBack","xs","name","labelAlign","labelCol","span","initialValues","remember","onFinish","values","setEmail","email","setUserName","username","setPassword","password","register","then","setUser","login","push","catch","e","message","error","resetUser","Item","label","rules","type","required","placeholder","validator","rule","value","test","Promise","reject","resolve","min","max","Password","valuePropName","wrapperCol","offset","htmlType"],"mappings":"8OAeMA,EAAWC,aAAS,WAAO,IAAD,EACGC,cAAzBC,EADsB,EACtBA,UAAWC,EADW,EACXA,UACbC,EAAUC,cAFc,EAGAC,oBAAS,GAHT,mBAGvBC,EAHuB,KAGdC,EAHc,KA6C9B,OACE,cAAC,IAAD,CACEC,MAAM,WACNC,UAAU,QACVC,UAAU,EACVC,QA7CY,WACdJ,GAAW,IA6CTD,QAASA,EACTM,MAAM,qBACNC,cAAc,EACdC,mBAfkB,WACfR,GACHH,EAAQY,UAKV,SAUE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKC,GAAI,GAAT,SACE,eAAC,IAAD,CACEC,KAAK,QACLC,WAAW,QACXC,SAAU,CAAEC,KAAM,GAClBC,cAAe,CACbC,UAAU,GAEZC,SAxDO,SAACC,GAChBvB,EAAUwB,SAASD,EAAOE,OAC1BzB,EAAU0B,YAAYH,EAAOI,UAC7B3B,EAAU4B,YAAYL,EAAOM,UAC7B7B,EAAU8B,WACPC,MAAK,WACJ9B,EAAU+B,UACVhC,EAAUiC,WAEXF,MAAK,WACJ7B,EAAQgC,KAAK,QAEdC,OAAM,SAACC,GACNC,IAAQC,MAAM,mBACdrC,EAAUsC,gBAmCR,UASE,cAAC,IAAKC,KAAN,CACEC,MAAM,QACNzB,KAAK,QACL0B,MAAO,CACL,CACEC,KAAM,QACNN,QAAS,kCAEX,CACEO,UAAU,EACVP,QAAS,6BAVf,SAcE,cAAC,IAAD,CAAOQ,YAAY,oBAErB,cAAC,IAAKL,KAAN,CACEC,MAAM,WACNzB,KAAK,WACL0B,MAAO,CACL,CACEE,UAAU,EACVP,QAAS,+BAEX,CAAES,UA5DS,SAACC,EAAMC,GAC9B,MAAI,MAAMC,KAAKD,GACNE,QAAQC,OACb,sDAEGD,QAAQE,aA+CP,SAWE,cAAC,IAAD,CAAOP,YAAY,eAGrB,cAAC,IAAKL,KAAN,CACEC,MAAM,WACNzB,KAAK,WACL0B,MAAO,CACL,CACEE,UAAU,EACVP,QAAS,+BAEX,CACEgB,IAAK,EACLhB,QAAS,yBAEX,CACEiB,IAAK,GACLjB,QAAS,2BAdf,SAkBE,cAAC,IAAMkB,SAAP,CAAgBV,YAAY,eAG9B,cAAC,IAAKL,KAAN,CACExB,KAAK,WACLwC,cAAc,UACdC,WAAY,CACVtC,KAAM,GACNuC,OAAQ,GALZ,SAQE,cAAC,IAAD,wDAGF,cAAC,IAAKlB,KAAN,CACEiB,WAAY,CACVtC,KAAM,GACNuC,OAAQ,IAHZ,SAME,cAAC,IAAD,CAAQf,KAAK,UAAUgB,SAAS,SAAhC,oCAWC9D","file":"static/js/12.1a5e18f7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport useStore from \"../stores/index\";\nimport {\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Row,\n  Col,\n  message,\n  Drawer,\n} from \"antd\";\nimport { useHistory } from \"react-router\";\n\nconst Reigster = observer(() => {\n  const { AuthStore, UserStore } = useStore();\n  const history = useHistory();\n  const [visible, setVisible] = useState(true);\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  const onFinish = (values) => {\n    AuthStore.setEmail(values.email);\n    AuthStore.setUserName(values.username);\n    AuthStore.setPassword(values.password);\n    AuthStore.register()\n      .then(() => {\n        UserStore.setUser();\n        AuthStore.login();\n      })\n      .then(() => {\n        history.push(\"/\");\n      })\n      .catch((e) => {\n        message.error(\"register failed\");\n        UserStore.resetUser();\n      });\n  };\n\n  // const onFinishFailed = (errorInfo) => {\n  //   message.error(\"register failed\");\n  // };\n\n  const validateUserName = (rule, value) => {\n    if (/\\W/g.test(value))\n      return Promise.reject(\n        \"only number character or underscore are suuported.\"\n      );\n    return Promise.resolve();\n  };\n\n  const onCloseGoBack = () => {\n    if (!visible) {\n      history.goBack();\n    }\n  };\n\n  return (\n    <Drawer\n      title=\"Register\"\n      placement=\"right\"\n      closable={false}\n      onClose={onClose}\n      visible={visible}\n      width=\"calc(100% - 250px)\"\n      getContainer={false}\n      afterVisibleChange={onCloseGoBack}\n    >\n      <Row>\n        <Col xs={24}>\n          <Form\n            name=\"basic\"\n            labelAlign=\"right\"\n            labelCol={{ span: 3 }}\n            initialValues={{\n              remember: true,\n            }}\n            onFinish={onFinish}\n          >\n            <Form.Item\n              label=\"Email\"\n              name=\"email\"\n              rules={[\n                {\n                  type: \"email\",\n                  message: \"The input is not valid E-mail!\",\n                },\n                {\n                  required: true,\n                  message: \"Please input your email!\",\n                },\n              ]}\n            >\n              <Input placeholder=\"Email Address\" />\n            </Form.Item>\n            <Form.Item\n              label=\"Username\"\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your username!\",\n                },\n                { validator: validateUserName },\n              ]}\n            >\n              <Input placeholder=\"Username\" />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Password\"\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your password!\",\n                },\n                {\n                  min: 6,\n                  message: \"Minium six characters\",\n                },\n                {\n                  max: 10,\n                  message: \"Maximum ten characters\",\n                },\n              ]}\n            >\n              <Input.Password placeholder=\"Password\" />\n            </Form.Item>\n\n            <Form.Item\n              name=\"remember\"\n              valuePropName=\"checked\"\n              wrapperCol={{\n                span: 24,\n                offset: 7,\n              }}\n            >\n              <Checkbox>I agree to the terms and privacy policy</Checkbox>\n            </Form.Item>\n\n            <Form.Item\n              wrapperCol={{\n                span: 24,\n                offset: 11,\n              }}\n            >\n              <Button type=\"primary\" htmlType=\"submit\">\n                Register\n              </Button>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </Drawer>\n  );\n});\n\nexport default Reigster;\n"],"sourceRoot":""}