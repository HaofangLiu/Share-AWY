{"version":3,"sources":["pages/Login.js"],"names":["Login","observer","useStore","AuthStore","UserStore","history","useHistory","useState","visible","setVisible","onClose","title","placement","closable","width","getContainer","afterVisibleChange","goBack","xs","name","labelAlign","labelCol","span","initialValues","remember","onFinish","values","setUserName","username","setPassword","password","login","then","setUser","catch","e","message","error","resetUser","onFinishFailed","errorInfo","Item","label","rules","required","placeholder","min","max","Password","valuePropName","wrapperCol","offset","type","htmlType"],"mappings":"8OAgBMA,EAAQC,aAAS,WAAO,IAAD,EACMC,cAAzBC,EADmB,EACnBA,UAAWC,EADQ,EACRA,UACbC,EAAUC,cAFW,EAGGC,oBAAS,GAHZ,mBAGpBC,EAHoB,KAGXC,EAHW,KASrBC,EAAU,WACdD,GAAW,IA4Bb,OACE,cAAC,IAAD,CACEE,MAAM,QACNC,UAAU,QACVC,UAAU,EACVH,QAASA,EACTF,QAASA,EACTM,MAAM,qBACNC,cAAc,EACdC,mBAfkB,WACfR,GACHH,EAAQY,UAKV,SAUE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKC,GAAI,GAAT,SACE,eAAC,IAAD,CACEC,KAAK,QACLC,WAAW,QACXC,SAAU,CAAEC,KAAM,GAClBC,cAAe,CACbC,UAAU,GAEZC,SA7CO,SAACC,GAChBvB,EAAUwB,YAAYD,EAAOE,UAC7BzB,EAAU0B,YAAYH,EAAOI,UAC7B3B,EAAU4B,QACPC,MAAK,WACJ5B,EAAU6B,UACVvB,OAEDwB,OAAM,SAACC,GAENC,IAAQC,MAAM,gBACdjC,EAAUkC,gBAmCNC,eA/Ba,SAACC,GACtBJ,IAAQC,MAAM,iBAsBR,UAUE,cAAC,IAAKI,KAAN,CACEC,MAAM,UACNvB,KAAK,WACLwB,MAAO,CACL,CACEC,UAAU,EACVR,QAAS,wCANf,SAUE,cAAC,IAAD,CAAOS,YAAY,wBAGrB,cAAC,IAAKJ,KAAN,CACEC,MAAM,WACNvB,KAAK,WACLwB,MAAO,CACL,CACEC,UAAU,EACVR,QAAS,+BAEX,CACEU,IAAK,EACLV,QAAS,yBAEX,CACEW,IAAK,GACLX,QAAS,2BAdf,SAkBE,cAAC,IAAMY,SAAP,CAAgBH,YAAY,eAG9B,cAAC,IAAKJ,KAAN,CACEtB,KAAK,WACL8B,cAAc,UACdC,WAAY,CACV5B,KAAM,GACN6B,OAAQ,IALZ,SAQE,cAAC,IAAD,4BAGF,cAAC,IAAKV,KAAN,CACES,WAAY,CACV5B,KAAM,GACN6B,OAAQ,IAHZ,SAME,cAAC,IAAD,CAAQC,KAAK,UAAUC,SAAS,SAAhC,iCAWCrD","file":"static/js/11.e0e10acb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { observer } from \"mobx-react\";\n// import useStore from \"../stores/index\";\nimport {\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Row,\n  Col,\n  message,\n  Drawer,\n} from \"antd\";\nimport useStore from \"../stores\";\nimport { useHistory } from \"react-router\";\n\nconst Login = observer(() => {\n  const { AuthStore, UserStore } = useStore();\n  const history = useHistory();\n  const [visible, setVisible] = useState(true);\n\n  // const showDrawer = () => {\n  //   setVisible(true);\n  // };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  const onFinish = (values) => {\n    AuthStore.setUserName(values.username);\n    AuthStore.setPassword(values.password);\n    AuthStore.login()\n      .then(() => {\n        UserStore.setUser();\n        onClose();\n      })\n      .catch((e) => {\n        // console.log(e);\n        message.error(\"login failed\");\n        UserStore.resetUser();\n      });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    message.error(\"login failed\");\n  };\n\n  const onCloseGoBack = () => {\n    if (!visible) {\n      history.goBack();\n    }\n  };\n\n  return (\n    <Drawer\n      title=\"Login\"\n      placement=\"right\"\n      closable={false}\n      onClose={onClose}\n      visible={visible}\n      width=\"calc(100% - 250px)\"\n      getContainer={false}\n      afterVisibleChange={onCloseGoBack}\n    >\n      <Row>\n        <Col xs={24}>\n          <Form\n            name=\"basic\"\n            labelAlign=\"right\"\n            labelCol={{ span: 3 }}\n            initialValues={{\n              remember: true,\n            }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"Account\"\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your username or email\",\n                },\n              ]}\n            >\n              <Input placeholder=\"Username or email\" />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Password\"\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your password!\",\n                },\n                {\n                  min: 6,\n                  message: \"Minium six characters\",\n                },\n                {\n                  max: 10,\n                  message: \"Maximum ten characters\",\n                },\n              ]}\n            >\n              <Input.Password placeholder=\"Password\" />\n            </Form.Item>\n\n            <Form.Item\n              name=\"remember\"\n              valuePropName=\"checked\"\n              wrapperCol={{\n                span: 24,\n                offset: 11,\n              }}\n            >\n              <Checkbox>Remember Me</Checkbox>\n            </Form.Item>\n\n            <Form.Item\n              wrapperCol={{\n                span: 24,\n                offset: 12,\n              }}\n            >\n              <Button type=\"primary\" htmlType=\"submit\">\n                Login\n              </Button>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </Drawer>\n  );\n});\n\nexport default Login;\n"],"sourceRoot":""}