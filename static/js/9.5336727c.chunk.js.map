{"version":3,"sources":["components/Tips.js","res/common.svg","res/music.svg","res/video.svg","res/file.svg","util/common-utils.js","components/Uploader.js","pages/Home.js"],"names":["StyledDiv","styled","div","Tips","children","getPreviewImage","urlObj","fileExt","getFileExtend","attributes","name","includes","url","file","music","video","common","copyToClip","str","navigator","clipboard","writeText","then","message","success","err","error","split","pop","toLowerCase","StyledResult","StyledTitle","h1","StyledImage","img","StyledUploaderContainer","UploaderComponent","observer","Dragger","Upload","useStore","ImageStore","UserStore","beforeUploadProps","beforeUpload","setFile","setFileName","loggedinUser","warning","size","uploadFile","serverFile","catch","e","showUploadList","spinning","isUploading","className","InboxOutlined","rel","target","href","type","style","color","onClick","fileName","alt","src","p","Home","username","Uploader"],"mappings":"gJAGMA,EAAYC,IAAOC,IAAV,wIAYAC,IAJF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OAAO,cAACJ,EAAD,UAAYI,M,qGCZN,UAA0B,mCCA1B,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,iC,SCM5BC,EAAkB,SAACC,GAC9B,IAKMC,EAAUC,EAAcF,EAAOG,WAAWC,MAChD,QAAQ,GACN,IAPa,CAAC,MAAO,MAAO,OAOhBC,SAASJ,GACnB,OAAOD,EAAOG,WAAWG,IAC3B,IARc,CAAC,OAAQ,MAAO,MAAO,MAAO,MAAO,QAQtCD,SAASJ,GACpB,OAAOM,EACT,IATe,CAAC,MAAO,MAAO,OAShBF,SAASJ,GACrB,OAAOO,EACT,IAVe,CAAC,MAAO,OAAQ,OAUjBH,SAASJ,GACrB,OAAOQ,EACT,QACE,OAAOC,IAIAC,EAAa,SAACC,GACzBC,UAAUC,UAAUC,UAAUH,GAAKI,MACjC,WACEC,IAAQC,QAAQ,sCAElB,SAAUC,GACRF,IAAQG,MAAM,mBAKdlB,EAAgB,SAACU,GAAD,OAASA,EAAIS,MAAM,KAAKC,MAAMC,gB,mKC9B9CC,EAAe7B,IAAOC,IAAV,+FAMZ6B,EAAc9B,IAAO+B,GAAV,sEAKXC,EAAchC,IAAOiC,IAAV,iDAIXC,EAA0BlC,IAAOC,IAAV,iDA4FdkC,EAxFWC,aAAS,WAAO,IAChCC,EAAYC,IAAZD,QAD+B,EAELE,cAA1BC,EAF+B,EAE/BA,WAAYC,EAFmB,EAEnBA,UAEdC,EAAoB,CACxBC,aAAc,SAAC/B,GAGb,OAFA4B,EAAWI,QAAQhC,GACnB4B,EAAWK,YAAYjC,EAAKH,MACG,OAA3BgC,EAAUK,cACZxB,IAAQyB,QAAQ,gCACT,GAELnC,EAAKoC,KAAO,WACd1B,IAAQyB,QAAQ,yBACT,QAETP,EAAWS,aACR5B,MAAK,SAAC6B,GACL5B,IAAQC,QAAQ,qBAEjB4B,OAAM,SAACC,GACN9B,IAAQG,MAAM,qBAIpB4B,gBAAgB,GAGlB,OACE,cAAC,IAAD,CAAMC,SAAUd,EAAWe,YAA3B,SACE,eAACrB,EAAD,WACE,eAACG,EAAD,2BAAaK,GAAb,cACE,mBAAGc,UAAU,uBAAb,SACE,cAACC,EAAA,EAAD,MAEF,mBAAGD,UAAU,kBAAb,uDAGA,mBAAGA,UAAU,kBAAb,gHAKF,8BACGhB,EAAWU,WACV,eAACrB,EAAD,WACE,cAACC,EAAD,qBACA,+BACE,+CACA,+BACE,mBACE4B,IAAI,aACJC,OAAO,SACPC,KAAMpB,EAAWU,WAAW1C,WAAWG,IAAIH,WAAWG,IAHxD,2BAOA,sCACA,cAAC,IAAD,CACEkD,KAAK,OACLC,MAAO,CAAEC,MAAO,SAChBC,QAAS,WACPhD,YACEwB,EAAWU,WAAW1C,WAAWG,IAAIH,WAAWG,MALtD,8BAYF,0CACA,6BAAK6B,EAAWyB,WAChB,yCACA,6BACE,cAACjC,EAAD,CACEkC,IAAI,UACJC,IAAK/D,YAAgBoC,EAAWU,WAAW1C,WAAWG,eAK5D,e,SCrGRmB,EAAc9B,IAAOoE,EAAV,qDAIXC,EAAOjC,aAAS,WAAO,IACnBK,EAAcF,cAAdE,UAER,OACE,qCACGA,EAAUK,aAAe,KAAO,cAAC5C,EAAA,EAAD,0CAChCuC,EAAUK,aACT,eAAC,EAAD,qBACUL,EAAUK,aAAatC,WAAW8D,YAE1C,KACJ,cAACC,EAAD,UAKSF","file":"static/js/9.5336727c.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledDiv = styled.div`\n  background: orange;\n  padding: 10px;\n  margin: 100px 30px 20px;\n  color: #fff;\n  border-radius: 4px;\n`;\n\nconst Tips = ({ children }) => {\n  return <StyledDiv>{children}</StyledDiv>;\n};\n\nexport default Tips;\n","export default __webpack_public_path__ + \"static/media/common.c5ef5ebd.svg\";","export default __webpack_public_path__ + \"static/media/music.dee5299f.svg\";","export default __webpack_public_path__ + \"static/media/video.2d61b46f.svg\";","export default __webpack_public_path__ + \"static/media/file.0309cae4.svg\";","import common from \"../res/common.svg\";\nimport music from \"../res/music.svg\";\nimport video from \"../res/video.svg\";\nimport file from \"../res/file.svg\";\nimport { message } from \"antd\";\n\nexport const getPreviewImage = (urlObj) => {\n  const picArr = [\"jpg\", \"png\", \"svg\"];\n  const fileArr = [\"docx\", \"doc\", \"ppt\", \"wps\", \"pdf\", \"xlsx\"];\n  const musicArr = [\"mp3\", \"wma\", \"aac\"];\n  const videoArr = [\"mp4\", \"mpeg\", \"avi\"];\n\n  const fileExt = getFileExtend(urlObj.attributes.name);\n  switch (true) {\n    case picArr.includes(fileExt):\n      return urlObj.attributes.url;\n    case fileArr.includes(fileExt):\n      return file;\n    case musicArr.includes(fileExt):\n      return music;\n    case videoArr.includes(fileExt):\n      return video;\n    default:\n      return common;\n  }\n};\n\nexport const copyToClip = (str) => {\n  navigator.clipboard.writeText(str).then(\n    function () {\n      message.success(\"copy to your clipboard success!\");\n    },\n    function (err) {\n      message.error(\"copy error!\");\n    }\n  );\n};\n\nconst getFileExtend = (str) => str.split(\".\").pop().toLowerCase();\n","import React from \"react\";\nimport useStore from \"../stores\";\nimport { observer } from \"mobx-react\";\nimport { Upload, message, Spin, Button } from \"antd\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport styled from \"styled-components\";\nimport { getPreviewImage, copyToClip } from \"../util/common-utils\";\n\nconst StyledResult = styled.div`\n  margin-top: 30px;\n  border: 1px dashed #ccc;\n  padding: 20px;\n`;\n\nconst StyledTitle = styled.h1`\n  margin: 20px 0;\n  text-align: center;\n`;\n\nconst StyledImage = styled.img`\n  max-width: 300px;\n`;\n\nconst StyledUploaderContainer = styled.div`\n  margin: 5px 30px;\n`;\n\nconst UploaderComponent = observer(() => {\n  const { Dragger } = Upload;\n  const { ImageStore, UserStore } = useStore();\n\n  const beforeUploadProps = {\n    beforeUpload: (file) => {\n      ImageStore.setFile(file);\n      ImageStore.setFileName(file.name);\n      if (UserStore.loggedinUser === null) {\n        message.warning(\"You have to login to upload\");\n        return false;\n      }\n      if (file.size > 1024 * 1024 * 1000) {\n        message.warning(\"max file size is 1GB\");\n        return false;\n      }\n      ImageStore.uploadFile()\n        .then((serverFile) => {\n          message.success(\"upload success\");\n        })\n        .catch((e) => {\n          message.error(\"upload failed\");\n        });\n      // return false;\n    },\n    showUploadList: false,\n  };\n\n  return (\n    <Spin spinning={ImageStore.isUploading}>\n      <StyledUploaderContainer>\n        <Dragger {...beforeUploadProps}>\n          <p className=\"ant-upload-drag-icon\">\n            <InboxOutlined />\n          </p>\n          <p className=\"ant-upload-text\">\n            Click or drag file to this area to upload\n          </p>\n          <p className=\"ant-upload-hint\">\n            Support for a single upload. Strictly prohibit from uploading\n            company data or other band files\n          </p>\n        </Dragger>\n        <div>\n          {ImageStore.serverFile ? (\n            <StyledResult>\n              <StyledTitle>Result</StyledTitle>\n              <dl>\n                <dt>Your link is:</dt>\n                <dd>\n                  <a\n                    rel=\"noreferrer\"\n                    target=\"_blank\"\n                    href={ImageStore.serverFile.attributes.url.attributes.url}\n                  >\n                    Click to open\n                  </a>\n                  <span> |</span>\n                  <Button\n                    type=\"link\"\n                    style={{ color: \"black\" }}\n                    onClick={() => {\n                      copyToClip(\n                        ImageStore.serverFile.attributes.url.attributes.url\n                      );\n                    }}\n                  >\n                    Click to copy\n                  </Button>\n                </dd>\n                <dt>FileName</dt>\n                <dd>{ImageStore.fileName}</dd>\n                <dt>Preview</dt>\n                <dd>\n                  <StyledImage\n                    alt=\"preview\"\n                    src={getPreviewImage(ImageStore.serverFile.attributes.url)}\n                  />\n                </dd>\n              </dl>\n            </StyledResult>\n          ) : null}\n        </div>\n      </StyledUploaderContainer>\n    </Spin>\n  );\n});\n\nexport default UploaderComponent;\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport useStore from \"../stores\";\nimport UploaderComponent from \"../components/Uploader\";\nimport Tips from \"../components/Tips\";\nimport styled from \"styled-components\";\n\nconst StyledTitle = styled.p`\n  margin: 100px 30px 0;\n`;\n\nconst Home = observer(() => {\n  const { UserStore } = useStore();\n\n  return (\n    <>\n      {UserStore.loggedinUser ? null : <Tips>You have to login to upload</Tips>}\n      {UserStore.loggedinUser ? (\n        <StyledTitle>\n          Hello, {UserStore.loggedinUser.attributes.username}\n        </StyledTitle>\n      ) : null}\n      <UploaderComponent />\n    </>\n  );\n});\n\nexport default Home;\n"],"sourceRoot":""}